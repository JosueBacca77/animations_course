/* 
perspective property should be defined on the parent element
perspective-origin: xAxis yAxis
    -> left, center, right bottom, top
    -> Ppercentage
    -> lenght rg 50px

    translate3d(x, y, z)

    scale3d(x,y,z)
    scale3d(1,1,1) --> original size
    scale3d(2,1,1) --> doble size in x axis 
    scale -> to see changes in z directions, we need to rotate in x or y axis !!!!!

    rotate3d(x,y,z,ang)
    x, y ,z -> numbers
    ang -> angle
    rotate(1,0,0,45deg) = rotateX(45deg)
    rotate(1,0,1,45deg) = rotateX(45deg) rotateZ(45deg)
    rotate(1,1,0,45deg) = rotateX(45deg) rotateY(45deg)
*/

body{
    height: 80vh;
    display: flex;
    justify-content: center;
    align-items: center;
}

@keyframes back-facing {
    0% {transform: rotateY(0deg)}
    100% {transform: rotateY(360deg)}
}

.wrapper{
    width: 200px;
    height: 200px;
    border: 2px solid black;
    perspective: 400px;
    /* perspective-origin: 80px 10px; */
}

.box{
    width: 200px;
    height: 200px;
    border-radius: 8px;
    /* background: linear-gradient(45deg, lightgreen, lightblue); */
    background-image: url('./images/gardenia.jpeg');
    /* transform: translateZ(-100px); */
    /* transform: translate3d(0, 10px, 100px); */
    /* transform: scale3d(1,1,3) rotateY(65deg); */
    /* transform: rotate3d(0,1,0,45deg); */
    /* transform: rotateY(100deg) */
    animation: back-facing 3s linear infinite;
    /* backface-visibility: visible; */
    /* transform-style: preserve-3d;  */
}

.blue-box{
    width: 100px;
    height: 100px;
    background: linear-gradient(45deg, darkgreen, lightgreen);

    transform: rotate3d(1,1,1,45deg);
}

img{
    width: 200px;
    height: 200px;
    border-radius: 8px;
    object-fit: cover;
    /* transition: transform 3s; */
    transform: perspective(400px) scale3d(1,1,1) rotateY(55deg);

    box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;}

/* img:hover{
    transform: rotate3d(0,0,1, 60deg);
} */